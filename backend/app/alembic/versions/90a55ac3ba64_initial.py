"""initial

Revision ID: 90a55ac3ba64
Revises: 8274da30b38f
Create Date: 2025-09-14 18:42:07.095987

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '90a55ac3ba64'
down_revision: Union[str, Sequence[str], None] = '8274da30b38f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_contract_id'), table_name='contract')
    op.drop_index(op.f('ix_contract_name'), table_name='contract')
    op.drop_index(op.f('ix_contract_number'), table_name='contract')
    op.drop_table('contract')
    op.drop_table('users')
    op.drop_index(op.f('ix_contract_version_contract_id'), table_name='contract_version')
    op.drop_index(op.f('ix_contract_version_id'), table_name='contract_version')
    op.drop_table('contract_version')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contract_version',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('contract_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('version_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('changes_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('ai_summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], ['contract.id'], name=op.f('contract_version_contract_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('contract_version_pkey'))
    )
    op.create_index(op.f('ix_contract_version_id'), 'contract_version', ['id'], unique=False)
    op.create_index(op.f('ix_contract_version_contract_id'), 'contract_version', ['contract_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey')),
    sa.UniqueConstraint('username', name=op.f('users_username_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('contract',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contract_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('parties', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('execution_deadline', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('planned_amount', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('actual_amount', sa.NUMERIC(precision=15, scale=2), autoincrement=False, nullable=True),
    sa.Column('readiness_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('contract_pkey'))
    )
    op.create_index(op.f('ix_contract_number'), 'contract', ['number'], unique=False)
    op.create_index(op.f('ix_contract_name'), 'contract', ['name'], unique=False)
    op.create_index(op.f('ix_contract_id'), 'contract', ['id'], unique=False)
    # ### end Alembic commands ###
